spring:

  datasource:
    driver-class-name: org.postgresql.Driver
    platform: postgres
    url: ${DATASOURCE_URL}
    username: admin_jake
    password: admin_jake

    maxActive: 10
    maxIdle: 5
    minIdle: 2
    initialSize: 5
    removeAbandoned: true

  messages:
    basename: messages

  jpa:
    hibernate:
      # !!!!!!!!!!!!!!!!! DB 초기화 수정 주의 !!!!!!!!!!!!!!!!!!!!!!!!!!!!
      ddl-auto: none
      dialect: org.hibernate.dialect.PostgreSQL10Dialect
    properties:
      hibernate:
        format_sql: true
    show-sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
    generate-ddl: true

  sql:
    init:
      mode: always

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: # provider 추가 시 OpenIdProvider 로 인식, 구글은 OpenIdProvider 사용하지 않음
              - profile
              - email
            #redirect-uri: CommonOAuth2Provider 에서 구글은 기본으로 설정되어 있음 : "{baseUrl}/{action}/oauth2/code/{registrationId}"
            redirect-uri: ${GOOGLE_REDIRECT_URI}

          # https://developers.naver.com/docs/login/devguide/devguide.md
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            scope:
              - name
              - email
              - gender
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: ${NAVER_REDIRECT_URI}

          kakao: # https://developers.kakao.com/docs/latest/ko/kakaologin/common#user-info
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            scope:
              - profile_nickname
            #              - account_email # 카카오는 email 받으려면 비즈니스앱으로 전환 필요
            # 성별, 나이는 비즈니스 앱으로 전환 필요
            client-name: Kakao
            authorization-grant-type: authorization_code
            redirect-uri: ${KAKAO_REDIRECT_URI}

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-info-authentication-method: header
            user-name-attribute: response # Naver 응답 json: resultCode, message, response 중 response 지정

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-info-authentication-method: header
            user-name-attribute: id # Kakao 응답 값 id, connected_at, properties, kakao_account 중 id 지정


  servlet:
    multipart:
      maxFileSize: 50MB
      maxRequestSize: 50MB



logging:
  level:
    root: info



# 세션 타임아웃 설정
# 세션의 타임아웃 시간은 해당 세션과 관련된 JSESSIONID 를 전달하는 HTTP 요청이 있으면 현재 시간으로
# 다시 초기화 된다.
server:
  servlet:
    session:
      timeout: 1800

  #  port:

  error:
    whitelabel:
      enabled: false


cloud:
  aws:
    s3:
      bucket: mavikarga-bucket # {버킷명}
    credentials:
      access-key: ${S3_ACCESS_KEY}
      secret-key: ${S3_SECRET_KEY}
    region:
      static: ap-northeast-2
      auto: false
    stack:
      auto: false